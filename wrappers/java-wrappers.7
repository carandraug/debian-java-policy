\" Man page documenting the java-wrappers
\"
\" Copyright 2008 by Vincent Fourmond
\"
\" This documentation is free software; you can redistribute it and/or modify
\" it under the terms of the GNU General Public License as published by
\" the Free Software Foundation; either version 2 of the License, or
\" (at your option) any later version.

\" This package is distributed in the hope that it will be useful,
\" but WITHOUT ANY WARRANTY; without even the implied warranty of
\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
\" GNU General Public License for more details.

\" You should have received a copy of the GNU General Public License
\" along with this program; if not, write to the Free Software
\" Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
.TH JAVA-WRAPPERS 7 "2008-01-05" "Version 0.27" "Java wrappers"

.SH NAME
.B java-wrappers 
\- capacities shared by java wrapper scripts

.SH DESCRIPTION

Most Java programs are not run directly, but through small shell
scripts that take care of various things, such as finding a suitable
java environment and looking for libraries.

To ease the task of the maintainers, they rely on a library providing
runtime detection, library detection and other features. This manual
page describes the common features of all those scripts, and to which
point you can configure them. This is mainly done via environment
variables. 

.SH ENVIRONMENT VARIABLES

.B java-wrappers 
understands some environment variables:

.TP
.B JAVA_CMD 
The 
.I java
command that will be run. If this variable is set, it disables all
lookup for a java runtime.

.TP
.B JAVA_BINDIR
Specifies a directory that will be looked for a 
.I java
or a 
.I jdb
executable (depending on the setting of
.IR JAVA_DEBUGGER ).
It has precedence over 
.I JAVA_HOME
but not over
.IR JAVA_CMD .


.TP
.B JAVA_HOME
A path to a java runtime. If this variable is set, all lookup for a
java runtime is disabled, except that if no 
.I java
executable is found in the path, the command
.I java
is used.

.TP
.B JAVA_DEBUGGER
If this is set, the wrapper will try to pick up a java debugger rather
than a java interpreter. This will fail if the 
.I jbd
of the runtime found is a stub.

.TP
.B JAVA_CLASSPATH
Additional classpath, will have priority over the one found by the
wrapper. 

.TP
.B JAVA_ARGS
Additional arguments to the 
.I java
command. They will come before all other arguments.

.TP
.B FORCE_CLASSPATH
If this variable is set, it will be 
.B the only classpath\fR.
You'd better know what you are doing.

.TP
.B DEBUG_WRAPPER
This is probably the most important variable; if it set, the wrapper
will print out useful information as it goes by its business, such as
which runtime it did find, and which command is run eventually.

.TP
.B JAVA_JARPATH
The path where the wrappers will go looking for 
.I jar
archives. If not set, the wrapper will look into the default
directory,
.IR /usr/share/java .
.B Warning :
the wrapper will not look anywhere else than in 
.IR JAVA_JARPATH .
Setting it incorrectly will most probably result in early crashes.

.SH EXAMPLES

The examples all rely on 
.BR rasterizer (1),
but they really apply to all scripts that use java-wrappers.

Print out debugging information:

.I DEBUG_WRAPPER=1 rasterizer

Limit rasterizer's memory to 80 MB:

.I JAVA_ARGS=-Xmx80m rasterizer

Force rasterizer to run with 
.BR kaffe (1):

.I JAVA_HOME=/usr/lib/kaffe rasterizer

The same, but using 
.IR JAVA_BINDIR :

.I JAVA_BINDIR=/usr/lib/kaffe/bin rasterizer

Debug rasterizer with Sun's debugger, while printing debugging
information from the wrapper:

.I DEBUG_WRAPPER=1 JAVA_CMD=/usr/lib/jvm/java-6-sun/bin/jdb rasterizer

.SH BUGS

Care has been taken to make the wrappers bug-free. If that was not
the case, please file a bug report against
.B java-common
with a java-wrappers in the title.

If you wish to submit any problem with a java executable relying on
.BR java-wrappers ,
please also submit the output of the command run with
.IR DEBUG_WRAPPER=1 .
It will save one mail exchange and therefore potentially reduce the
time it will take to fix the bug.

.SH SEE ALSO

.BR java (1),
.BR jdb (1)

.I /usr/lib/java/wrappers.sh

.SH AUTHOR

.B java-wrappers
and its documentation were written by 
Vincent Fourmond <fourmond@debian.org>
